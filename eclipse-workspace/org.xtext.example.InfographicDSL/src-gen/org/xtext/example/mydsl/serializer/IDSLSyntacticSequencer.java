/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.IDSLGrammarAccess;

@SuppressWarnings("all")
public class IDSLSyntacticSequencer extends AbstractSyntacticSequencer {

	protected IDSLGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Barchart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a;
	protected AbstractElementAlias match_Barchart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a;
	protected AbstractElementAlias match_Foot_BEGINTerminalRuleCall_2_1_0_0_0_a;
	protected AbstractElementAlias match_Foot_BEGINTerminalRuleCall_2_1_0_0_0_p;
	protected AbstractElementAlias match_Foot_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_0_a_ENDTerminalRuleCall_2_1_1__;
	protected AbstractElementAlias match_Head_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_ENDTerminalRuleCall_2_1_1__;
	protected AbstractElementAlias match_Picturegraph___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a;
	protected AbstractElementAlias match_Picturegraph___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a;
	protected AbstractElementAlias match_Piechart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a;
	protected AbstractElementAlias match_Piechart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a;
	protected AbstractElementAlias match_Title_OffKeyword_0_1_or___BEGINTerminalRuleCall_1_0_0_ENDTerminalRuleCall_1_1__;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (IDSLGrammarAccess) access;
		match_Barchart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getBarchartAccess().getDataKeyword_3_2_0()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getColonKeyword_3_2_1()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getBEGINTerminalRuleCall_3_2_2()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getChartDataParserRuleCall_3_2_3()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getENDTerminalRuleCall_3_2_5()));
		match_Barchart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getBarchartAccess().getENDTerminalRuleCall_3_2_5()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getDataKeyword_3_2_0()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getColonKeyword_3_2_1()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getBEGINTerminalRuleCall_3_2_2()), new TokenAlias(false, false, grammarAccess.getBarchartAccess().getChartDataParserRuleCall_3_2_3()));
		match_Foot_BEGINTerminalRuleCall_2_1_0_0_0_a = new TokenAlias(true, true, grammarAccess.getFootAccess().getBEGINTerminalRuleCall_2_1_0_0_0());
		match_Foot_BEGINTerminalRuleCall_2_1_0_0_0_p = new TokenAlias(true, false, grammarAccess.getFootAccess().getBEGINTerminalRuleCall_2_1_0_0_0());
		match_Foot_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_0_a_ENDTerminalRuleCall_2_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(true, true, grammarAccess.getFootAccess().getBEGINTerminalRuleCall_2_1_0_0_0()), new TokenAlias(false, false, grammarAccess.getFootAccess().getENDTerminalRuleCall_2_1_1())), new TokenAlias(false, false, grammarAccess.getFootAccess().getOffKeyword_2_0()));
		match_Head_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_ENDTerminalRuleCall_2_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHeadAccess().getBEGINTerminalRuleCall_2_1_0_0()), new TokenAlias(false, false, grammarAccess.getHeadAccess().getENDTerminalRuleCall_2_1_1())), new TokenAlias(false, false, grammarAccess.getHeadAccess().getOffKeyword_2_0()));
		match_Picturegraph___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getDataKeyword_3_2_0()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getColonKeyword_3_2_1()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getBEGINTerminalRuleCall_3_2_2()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getChartDataParserRuleCall_3_2_3()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getENDTerminalRuleCall_3_2_5()));
		match_Picturegraph___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getENDTerminalRuleCall_3_2_5()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getDataKeyword_3_2_0()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getColonKeyword_3_2_1()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getBEGINTerminalRuleCall_3_2_2()), new TokenAlias(false, false, grammarAccess.getPicturegraphAccess().getChartDataParserRuleCall_3_2_3()));
		match_Piechart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPiechartAccess().getDataKeyword_3_2_0()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getColonKeyword_3_2_1()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getBEGINTerminalRuleCall_3_2_2()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getChartDataParserRuleCall_3_2_3()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getENDTerminalRuleCall_3_2_5()));
		match_Piechart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPiechartAccess().getENDTerminalRuleCall_3_2_5()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getDataKeyword_3_2_0()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getColonKeyword_3_2_1()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getBEGINTerminalRuleCall_3_2_2()), new TokenAlias(false, false, grammarAccess.getPiechartAccess().getChartDataParserRuleCall_3_2_3()));
		match_Title_OffKeyword_0_1_or___BEGINTerminalRuleCall_1_0_0_ENDTerminalRuleCall_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTitleAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, false, grammarAccess.getTitleAccess().getENDTerminalRuleCall_1_1())), new TokenAlias(false, false, grammarAccess.getTitleAccess().getOffKeyword_0_1()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getBEGINRule())
			return getBEGINToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getCOLOR_HEXRule())
			return getCOLOR_HEXToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getChartDataRule())
			return getChartDataToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getENDRule())
			return getENDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getFONT_SIZERule())
			return getFONT_SIZEToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * Synthetic terminal rule. The concrete syntax is to be specified by clients.
	 * Defaults to the empty string.
	 */
	protected String getBEGINToken(EObject semanticObject, RuleCall ruleCall, INode node) { return ""; }
	
	/**
	 * terminal COLOR_HEX : ('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F');
	 */
	protected String getCOLOR_HEXToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * ChartData: STRING ':' STRING;
	 */
	protected String getChartDataToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\"\" :";
	}
	
	/**
	 * Synthetic terminal rule. The concrete syntax is to be specified by clients.
	 * Defaults to the empty string.
	 */
	protected String getENDToken(EObject semanticObject, RuleCall ruleCall, INode node) { return ""; }
	
	/**
	 * terminal FONT_SIZE : ('0'..'9')+  'px ';
	 */
	protected String getFONT_SIZEToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "px ";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Barchart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a.equals(syntax))
				emit_Barchart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Barchart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a.equals(syntax))
				emit_Barchart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Foot_BEGINTerminalRuleCall_2_1_0_0_0_a.equals(syntax))
				emit_Foot_BEGINTerminalRuleCall_2_1_0_0_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Foot_BEGINTerminalRuleCall_2_1_0_0_0_p.equals(syntax))
				emit_Foot_BEGINTerminalRuleCall_2_1_0_0_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Foot_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_0_a_ENDTerminalRuleCall_2_1_1__.equals(syntax))
				emit_Foot_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_0_a_ENDTerminalRuleCall_2_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Head_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_ENDTerminalRuleCall_2_1_1__.equals(syntax))
				emit_Head_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_ENDTerminalRuleCall_2_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Picturegraph___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a.equals(syntax))
				emit_Picturegraph___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Picturegraph___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a.equals(syntax))
				emit_Picturegraph___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Piechart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a.equals(syntax))
				emit_Piechart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Piechart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a.equals(syntax))
				emit_Piechart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Title_OffKeyword_0_1_or___BEGINTerminalRuleCall_1_0_0_ENDTerminalRuleCall_1_1__.equals(syntax))
				emit_Title_OffKeyword_0_1_or___BEGINTerminalRuleCall_1_0_0_ENDTerminalRuleCall_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('data' ':' BEGIN ChartData END)*
	 *
	 * This ambiguous syntax occurs at:
	 *     bardata+=ChartData END (ambiguity) 'bgcolor' ':' color=Color
	 *     bardata+=ChartData END (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     bardata+=ChartData END (ambiguity) 'gridscale' ':' gridscale=INT
	 *     bardata+=ChartData END (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     bardata+=ChartData END (ambiguity) 'padding' ':' padding=INT
	 *     bardata+=ChartData END (ambiguity) 'position' ':' position=SIZE_POS
	 *     bardata+=ChartData END (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     bardata+=ChartData END (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     bardata+=ChartData END (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     bardata+=ChartData END (ambiguity) 'size' ':' size=SIZE_POS
	 *     bardata+=ChartData END (ambiguity) 'title' ':' title=STRING
	 *     bardata+=ChartData END (ambiguity) 'type' ':' type=BarType
	 *     bardata+=ChartData END (ambiguity) END (rule end)
	 *     color=Color (ambiguity) 'bgcolor' ':' color=Color
	 *     color=Color (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     color=Color (ambiguity) 'gridscale' ':' gridscale=INT
	 *     color=Color (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     color=Color (ambiguity) 'padding' ':' padding=INT
	 *     color=Color (ambiguity) 'position' ':' position=SIZE_POS
	 *     color=Color (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     color=Color (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     color=Color (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     color=Color (ambiguity) 'size' ':' size=SIZE_POS
	 *     color=Color (ambiguity) 'title' ':' title=STRING
	 *     color=Color (ambiguity) 'type' ':' type=BarType
	 *     color=Color (ambiguity) END (rule end)
	 *     colors=COLOR_CHARTS (ambiguity) 'bgcolor' ':' color=Color
	 *     colors=COLOR_CHARTS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     colors=COLOR_CHARTS (ambiguity) 'gridscale' ':' gridscale=INT
	 *     colors=COLOR_CHARTS (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     colors=COLOR_CHARTS (ambiguity) 'padding' ':' padding=INT
	 *     colors=COLOR_CHARTS (ambiguity) 'position' ':' position=SIZE_POS
	 *     colors=COLOR_CHARTS (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'size' ':' size=SIZE_POS
	 *     colors=COLOR_CHARTS (ambiguity) 'title' ':' title=STRING
	 *     colors=COLOR_CHARTS (ambiguity) 'type' ':' type=BarType
	 *     colors=COLOR_CHARTS (ambiguity) END (rule end)
	 *     gridscale=INT (ambiguity) 'bgcolor' ':' color=Color
	 *     gridscale=INT (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     gridscale=INT (ambiguity) 'gridscale' ':' gridscale=INT
	 *     gridscale=INT (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     gridscale=INT (ambiguity) 'padding' ':' padding=INT
	 *     gridscale=INT (ambiguity) 'position' ':' position=SIZE_POS
	 *     gridscale=INT (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     gridscale=INT (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     gridscale=INT (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     gridscale=INT (ambiguity) 'size' ':' size=SIZE_POS
	 *     gridscale=INT (ambiguity) 'title' ':' title=STRING
	 *     gridscale=INT (ambiguity) 'type' ':' type=BarType
	 *     gridscale=INT (ambiguity) END (rule end)
	 *     legendstyle=LegendStyle (ambiguity) 'bgcolor' ':' color=Color
	 *     legendstyle=LegendStyle (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     legendstyle=LegendStyle (ambiguity) 'gridscale' ':' gridscale=INT
	 *     legendstyle=LegendStyle (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     legendstyle=LegendStyle (ambiguity) 'padding' ':' padding=INT
	 *     legendstyle=LegendStyle (ambiguity) 'position' ':' position=SIZE_POS
	 *     legendstyle=LegendStyle (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     legendstyle=LegendStyle (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     legendstyle=LegendStyle (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     legendstyle=LegendStyle (ambiguity) 'size' ':' size=SIZE_POS
	 *     legendstyle=LegendStyle (ambiguity) 'title' ':' title=STRING
	 *     legendstyle=LegendStyle (ambiguity) 'type' ':' type=BarType
	 *     legendstyle=LegendStyle (ambiguity) END (rule end)
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'bgcolor' ':' color=Color
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'gridscale' ':' gridscale=INT
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'padding' ':' padding=INT
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'position' ':' position=SIZE_POS
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'size' ':' size=SIZE_POS
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'title' ':' title=STRING
	 *     name=BARCHARTID ':' BEGIN (ambiguity) 'type' ':' type=BarType
	 *     name=BARCHARTID ':' BEGIN (ambiguity) END (rule end)
	 *     padding=INT (ambiguity) 'bgcolor' ':' color=Color
	 *     padding=INT (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     padding=INT (ambiguity) 'gridscale' ':' gridscale=INT
	 *     padding=INT (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     padding=INT (ambiguity) 'padding' ':' padding=INT
	 *     padding=INT (ambiguity) 'position' ':' position=SIZE_POS
	 *     padding=INT (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     padding=INT (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     padding=INT (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     padding=INT (ambiguity) 'size' ':' size=SIZE_POS
	 *     padding=INT (ambiguity) 'title' ':' title=STRING
	 *     padding=INT (ambiguity) 'type' ':' type=BarType
	 *     padding=INT (ambiguity) END (rule end)
	 *     position=SIZE_POS (ambiguity) 'bgcolor' ':' color=Color
	 *     position=SIZE_POS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     position=SIZE_POS (ambiguity) 'gridscale' ':' gridscale=INT
	 *     position=SIZE_POS (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     position=SIZE_POS (ambiguity) 'padding' ':' padding=INT
	 *     position=SIZE_POS (ambiguity) 'position' ':' position=SIZE_POS
	 *     position=SIZE_POS (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'size' ':' size=SIZE_POS
	 *     position=SIZE_POS (ambiguity) 'title' ':' title=STRING
	 *     position=SIZE_POS (ambiguity) 'type' ':' type=BarType
	 *     position=SIZE_POS (ambiguity) END (rule end)
	 *     showgrid=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showgrid=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showgrid=ShowOptionsOff (ambiguity) 'gridscale' ':' gridscale=INT
	 *     showgrid=ShowOptionsOff (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     showgrid=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showgrid=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showgrid=ShowOptionsOff (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     showgrid=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showgrid=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showgrid=ShowOptionsOff (ambiguity) 'size' ':' size=SIZE_POS
	 *     showgrid=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showgrid=ShowOptionsOff (ambiguity) 'type' ':' type=BarType
	 *     showgrid=ShowOptionsOff (ambiguity) END (rule end)
	 *     showlegend=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showlegend=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showlegend=ShowOptionsOff (ambiguity) 'gridscale' ':' gridscale=INT
	 *     showlegend=ShowOptionsOff (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     showlegend=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showlegend=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showlegend=ShowOptionsOff (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'size' ':' size=SIZE_POS
	 *     showlegend=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showlegend=ShowOptionsOff (ambiguity) 'type' ':' type=BarType
	 *     showlegend=ShowOptionsOff (ambiguity) END (rule end)
	 *     showtitle=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showtitle=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showtitle=ShowOptionsOff (ambiguity) 'gridscale' ':' gridscale=INT
	 *     showtitle=ShowOptionsOff (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     showtitle=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showtitle=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showtitle=ShowOptionsOff (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'size' ':' size=SIZE_POS
	 *     showtitle=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showtitle=ShowOptionsOff (ambiguity) 'type' ':' type=BarType
	 *     showtitle=ShowOptionsOff (ambiguity) END (rule end)
	 *     size=SIZE_POS (ambiguity) 'bgcolor' ':' color=Color
	 *     size=SIZE_POS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     size=SIZE_POS (ambiguity) 'gridscale' ':' gridscale=INT
	 *     size=SIZE_POS (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     size=SIZE_POS (ambiguity) 'padding' ':' padding=INT
	 *     size=SIZE_POS (ambiguity) 'position' ':' position=SIZE_POS
	 *     size=SIZE_POS (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     size=SIZE_POS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     size=SIZE_POS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     size=SIZE_POS (ambiguity) 'size' ':' size=SIZE_POS
	 *     size=SIZE_POS (ambiguity) 'title' ':' title=STRING
	 *     size=SIZE_POS (ambiguity) 'type' ':' type=BarType
	 *     size=SIZE_POS (ambiguity) END (rule end)
	 *     title=STRING (ambiguity) 'bgcolor' ':' color=Color
	 *     title=STRING (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     title=STRING (ambiguity) 'gridscale' ':' gridscale=INT
	 *     title=STRING (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     title=STRING (ambiguity) 'padding' ':' padding=INT
	 *     title=STRING (ambiguity) 'position' ':' position=SIZE_POS
	 *     title=STRING (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     title=STRING (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     title=STRING (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     title=STRING (ambiguity) 'size' ':' size=SIZE_POS
	 *     title=STRING (ambiguity) 'title' ':' title=STRING
	 *     title=STRING (ambiguity) 'type' ':' type=BarType
	 *     title=STRING (ambiguity) END (rule end)
	 *     type=BarType (ambiguity) 'bgcolor' ':' color=Color
	 *     type=BarType (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     type=BarType (ambiguity) 'gridscale' ':' gridscale=INT
	 *     type=BarType (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     type=BarType (ambiguity) 'padding' ':' padding=INT
	 *     type=BarType (ambiguity) 'position' ':' position=SIZE_POS
	 *     type=BarType (ambiguity) 'showgrid' ':' showgrid=ShowOptionsOff
	 *     type=BarType (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     type=BarType (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     type=BarType (ambiguity) 'size' ':' size=SIZE_POS
	 *     type=BarType (ambiguity) 'title' ':' title=STRING
	 *     type=BarType (ambiguity) 'type' ':' type=BarType
	 *     type=BarType (ambiguity) END (rule end)
	 */
	protected void emit_Barchart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (END 'data' ':' BEGIN ChartData)*
	 *
	 * This ambiguous syntax occurs at:
	 *     bardata+=ChartData (ambiguity) bardata+=ChartData
	 *     color=Color 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     colors=COLOR_CHARTS 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     gridscale=INT 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     legendstyle=LegendStyle 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     name=BARCHARTID ':' BEGIN 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     padding=INT 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     position=SIZE_POS 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     showgrid=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     showlegend=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     showtitle=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     size=SIZE_POS 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     title=STRING 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 *     type=BarType 'data' ':' BEGIN ChartData (ambiguity) bardata+=ChartData
	 */
	protected void emit_Barchart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BEGIN*
	 *
	 * This ambiguous syntax occurs at:
	 *     bgcolor=Color (ambiguity) 'position' ':' position=SIZE_POS
	 *     bgcolor=Color (ambiguity) 'size' ':' size=SIZE_POS
	 *     bgcolor=Color (ambiguity) 'text' ':' text=STRING
	 *     bgcolor=Color (ambiguity) END (rule end)
	 *     bgimage=ImageSrc (ambiguity) 'position' ':' position=SIZE_POS
	 *     bgimage=ImageSrc (ambiguity) 'size' ':' size=SIZE_POS
	 *     bgimage=ImageSrc (ambiguity) 'text' ':' text=STRING
	 *     bgimage=ImageSrc (ambiguity) END (rule end)
	 *     bgpattern=Pattern (ambiguity) 'position' ':' position=SIZE_POS
	 *     bgpattern=Pattern (ambiguity) 'size' ':' size=SIZE_POS
	 *     bgpattern=Pattern (ambiguity) 'text' ':' text=STRING
	 *     bgpattern=Pattern (ambiguity) END (rule end)
	 *     name='foot' ':' (ambiguity) 'position' ':' position=SIZE_POS
	 *     name='foot' ':' (ambiguity) 'size' ':' size=SIZE_POS
	 *     name='foot' ':' (ambiguity) 'text' ':' text=STRING
	 *     position=SIZE_POS (ambiguity) 'position' ':' position=SIZE_POS
	 *     position=SIZE_POS (ambiguity) 'size' ':' size=SIZE_POS
	 *     position=SIZE_POS (ambiguity) 'text' ':' text=STRING
	 *     position=SIZE_POS (ambiguity) END (rule end)
	 *     size=SIZE_POS (ambiguity) 'position' ':' position=SIZE_POS
	 *     size=SIZE_POS (ambiguity) 'size' ':' size=SIZE_POS
	 *     size=SIZE_POS (ambiguity) 'text' ':' text=STRING
	 *     size=SIZE_POS (ambiguity) END (rule end)
	 *     text=STRING (ambiguity) 'position' ':' position=SIZE_POS
	 *     text=STRING (ambiguity) 'size' ':' size=SIZE_POS
	 *     text=STRING (ambiguity) 'text' ':' text=STRING
	 *     text=STRING (ambiguity) END (rule end)
	 */
	protected void emit_Foot_BEGINTerminalRuleCall_2_1_0_0_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BEGIN+
	 *
	 * This ambiguous syntax occurs at:
	 *     bgcolor=Color (ambiguity) 'bgcolor' ':' bgcolor=Color
	 *     bgcolor=Color (ambiguity) 'bgimage' ':' bgimage=ImageSrc
	 *     bgcolor=Color (ambiguity) 'bgpattern' ':' bgpattern=Pattern
	 *     bgimage=ImageSrc (ambiguity) 'bgcolor' ':' bgcolor=Color
	 *     bgimage=ImageSrc (ambiguity) 'bgimage' ':' bgimage=ImageSrc
	 *     bgimage=ImageSrc (ambiguity) 'bgpattern' ':' bgpattern=Pattern
	 *     bgpattern=Pattern (ambiguity) 'bgcolor' ':' bgcolor=Color
	 *     bgpattern=Pattern (ambiguity) 'bgimage' ':' bgimage=ImageSrc
	 *     bgpattern=Pattern (ambiguity) 'bgpattern' ':' bgpattern=Pattern
	 *     name='foot' ':' (ambiguity) 'bgcolor' ':' bgcolor=Color
	 *     name='foot' ':' (ambiguity) 'bgimage' ':' bgimage=ImageSrc
	 *     name='foot' ':' (ambiguity) 'bgpattern' ':' bgpattern=Pattern
	 *     position=SIZE_POS (ambiguity) 'bgcolor' ':' bgcolor=Color
	 *     position=SIZE_POS (ambiguity) 'bgimage' ':' bgimage=ImageSrc
	 *     position=SIZE_POS (ambiguity) 'bgpattern' ':' bgpattern=Pattern
	 *     size=SIZE_POS (ambiguity) 'bgcolor' ':' bgcolor=Color
	 *     size=SIZE_POS (ambiguity) 'bgimage' ':' bgimage=ImageSrc
	 *     size=SIZE_POS (ambiguity) 'bgpattern' ':' bgpattern=Pattern
	 *     text=STRING (ambiguity) 'bgcolor' ':' bgcolor=Color
	 *     text=STRING (ambiguity) 'bgimage' ':' bgimage=ImageSrc
	 *     text=STRING (ambiguity) 'bgpattern' ':' bgpattern=Pattern
	 */
	protected void emit_Foot_BEGINTerminalRuleCall_2_1_0_0_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'off' | (BEGIN* END)
	 *
	 * This ambiguous syntax occurs at:
	 *     name='foot' ':' (ambiguity) (rule end)
	 */
	protected void emit_Foot_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_0_a_ENDTerminalRuleCall_2_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'off' | (BEGIN END)
	 *
	 * This ambiguous syntax occurs at:
	 *     name='head' ':' (ambiguity) (rule end)
	 */
	protected void emit_Head_OffKeyword_2_0_or___BEGINTerminalRuleCall_2_1_0_0_ENDTerminalRuleCall_2_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('data' ':' BEGIN ChartData END)*
	 *
	 * This ambiguous syntax occurs at:
	 *     color=Color (ambiguity) 'bgcolor' ':' color=Color
	 *     color=Color (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     color=Color (ambiguity) 'label' ':' label=STRING
	 *     color=Color (ambiguity) 'padding' ':' padding=INT
	 *     color=Color (ambiguity) 'position' ':' position=SIZE_POS
	 *     color=Color (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     color=Color (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     color=Color (ambiguity) 'size' ':' size=SIZE_POS
	 *     color=Color (ambiguity) 'title' ':' title=STRING
	 *     color=Color (ambiguity) 'type' ':' type=PicturegraphType
	 *     color=Color (ambiguity) END (rule end)
	 *     colors=COLOR_CHARTS (ambiguity) 'bgcolor' ':' color=Color
	 *     colors=COLOR_CHARTS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     colors=COLOR_CHARTS (ambiguity) 'label' ':' label=STRING
	 *     colors=COLOR_CHARTS (ambiguity) 'padding' ':' padding=INT
	 *     colors=COLOR_CHARTS (ambiguity) 'position' ':' position=SIZE_POS
	 *     colors=COLOR_CHARTS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'size' ':' size=SIZE_POS
	 *     colors=COLOR_CHARTS (ambiguity) 'title' ':' title=STRING
	 *     colors=COLOR_CHARTS (ambiguity) 'type' ':' type=PicturegraphType
	 *     colors=COLOR_CHARTS (ambiguity) END (rule end)
	 *     label=STRING (ambiguity) 'bgcolor' ':' color=Color
	 *     label=STRING (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     label=STRING (ambiguity) 'label' ':' label=STRING
	 *     label=STRING (ambiguity) 'padding' ':' padding=INT
	 *     label=STRING (ambiguity) 'position' ':' position=SIZE_POS
	 *     label=STRING (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     label=STRING (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     label=STRING (ambiguity) 'size' ':' size=SIZE_POS
	 *     label=STRING (ambiguity) 'title' ':' title=STRING
	 *     label=STRING (ambiguity) 'type' ':' type=PicturegraphType
	 *     label=STRING (ambiguity) END (rule end)
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'bgcolor' ':' color=Color
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'label' ':' label=STRING
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'padding' ':' padding=INT
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'position' ':' position=SIZE_POS
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'size' ':' size=SIZE_POS
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'title' ':' title=STRING
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) 'type' ':' type=PicturegraphType
	 *     name=PICTUREGRAPHID ':' BEGIN (ambiguity) END (rule end)
	 *     padding=INT (ambiguity) 'bgcolor' ':' color=Color
	 *     padding=INT (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     padding=INT (ambiguity) 'label' ':' label=STRING
	 *     padding=INT (ambiguity) 'padding' ':' padding=INT
	 *     padding=INT (ambiguity) 'position' ':' position=SIZE_POS
	 *     padding=INT (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     padding=INT (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     padding=INT (ambiguity) 'size' ':' size=SIZE_POS
	 *     padding=INT (ambiguity) 'title' ':' title=STRING
	 *     padding=INT (ambiguity) 'type' ':' type=PicturegraphType
	 *     padding=INT (ambiguity) END (rule end)
	 *     picturegraphdata+=ChartData END (ambiguity) 'bgcolor' ':' color=Color
	 *     picturegraphdata+=ChartData END (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     picturegraphdata+=ChartData END (ambiguity) 'label' ':' label=STRING
	 *     picturegraphdata+=ChartData END (ambiguity) 'padding' ':' padding=INT
	 *     picturegraphdata+=ChartData END (ambiguity) 'position' ':' position=SIZE_POS
	 *     picturegraphdata+=ChartData END (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     picturegraphdata+=ChartData END (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     picturegraphdata+=ChartData END (ambiguity) 'size' ':' size=SIZE_POS
	 *     picturegraphdata+=ChartData END (ambiguity) 'title' ':' title=STRING
	 *     picturegraphdata+=ChartData END (ambiguity) 'type' ':' type=PicturegraphType
	 *     picturegraphdata+=ChartData END (ambiguity) END (rule end)
	 *     position=SIZE_POS (ambiguity) 'bgcolor' ':' color=Color
	 *     position=SIZE_POS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     position=SIZE_POS (ambiguity) 'label' ':' label=STRING
	 *     position=SIZE_POS (ambiguity) 'padding' ':' padding=INT
	 *     position=SIZE_POS (ambiguity) 'position' ':' position=SIZE_POS
	 *     position=SIZE_POS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'size' ':' size=SIZE_POS
	 *     position=SIZE_POS (ambiguity) 'title' ':' title=STRING
	 *     position=SIZE_POS (ambiguity) 'type' ':' type=PicturegraphType
	 *     position=SIZE_POS (ambiguity) END (rule end)
	 *     showlegend=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showlegend=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showlegend=ShowOptionsOff (ambiguity) 'label' ':' label=STRING
	 *     showlegend=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showlegend=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showlegend=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'size' ':' size=SIZE_POS
	 *     showlegend=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showlegend=ShowOptionsOff (ambiguity) 'type' ':' type=PicturegraphType
	 *     showlegend=ShowOptionsOff (ambiguity) END (rule end)
	 *     showtitle=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showtitle=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showtitle=ShowOptionsOff (ambiguity) 'label' ':' label=STRING
	 *     showtitle=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showtitle=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showtitle=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'size' ':' size=SIZE_POS
	 *     showtitle=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showtitle=ShowOptionsOff (ambiguity) 'type' ':' type=PicturegraphType
	 *     showtitle=ShowOptionsOff (ambiguity) END (rule end)
	 *     size=SIZE_POS (ambiguity) 'bgcolor' ':' color=Color
	 *     size=SIZE_POS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     size=SIZE_POS (ambiguity) 'label' ':' label=STRING
	 *     size=SIZE_POS (ambiguity) 'padding' ':' padding=INT
	 *     size=SIZE_POS (ambiguity) 'position' ':' position=SIZE_POS
	 *     size=SIZE_POS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     size=SIZE_POS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     size=SIZE_POS (ambiguity) 'size' ':' size=SIZE_POS
	 *     size=SIZE_POS (ambiguity) 'title' ':' title=STRING
	 *     size=SIZE_POS (ambiguity) 'type' ':' type=PicturegraphType
	 *     size=SIZE_POS (ambiguity) END (rule end)
	 *     title=STRING (ambiguity) 'bgcolor' ':' color=Color
	 *     title=STRING (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     title=STRING (ambiguity) 'label' ':' label=STRING
	 *     title=STRING (ambiguity) 'padding' ':' padding=INT
	 *     title=STRING (ambiguity) 'position' ':' position=SIZE_POS
	 *     title=STRING (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     title=STRING (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     title=STRING (ambiguity) 'size' ':' size=SIZE_POS
	 *     title=STRING (ambiguity) 'title' ':' title=STRING
	 *     title=STRING (ambiguity) 'type' ':' type=PicturegraphType
	 *     title=STRING (ambiguity) END (rule end)
	 *     type=PicturegraphType (ambiguity) 'bgcolor' ':' color=Color
	 *     type=PicturegraphType (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     type=PicturegraphType (ambiguity) 'label' ':' label=STRING
	 *     type=PicturegraphType (ambiguity) 'padding' ':' padding=INT
	 *     type=PicturegraphType (ambiguity) 'position' ':' position=SIZE_POS
	 *     type=PicturegraphType (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     type=PicturegraphType (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     type=PicturegraphType (ambiguity) 'size' ':' size=SIZE_POS
	 *     type=PicturegraphType (ambiguity) 'title' ':' title=STRING
	 *     type=PicturegraphType (ambiguity) 'type' ':' type=PicturegraphType
	 *     type=PicturegraphType (ambiguity) END (rule end)
	 */
	protected void emit_Picturegraph___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (END 'data' ':' BEGIN ChartData)*
	 *
	 * This ambiguous syntax occurs at:
	 *     color=Color 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     colors=COLOR_CHARTS 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     label=STRING 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     name=PICTUREGRAPHID ':' BEGIN 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     padding=INT 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     picturegraphdata+=ChartData (ambiguity) picturegraphdata+=ChartData
	 *     position=SIZE_POS 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     showlegend=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     showtitle=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     size=SIZE_POS 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     title=STRING 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 *     type=PicturegraphType 'data' ':' BEGIN ChartData (ambiguity) picturegraphdata+=ChartData
	 */
	protected void emit_Picturegraph___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('data' ':' BEGIN ChartData END)*
	 *
	 * This ambiguous syntax occurs at:
	 *     color=Color (ambiguity) 'bgcolor' ':' color=Color
	 *     color=Color (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     color=Color (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     color=Color (ambiguity) 'padding' ':' padding=INT
	 *     color=Color (ambiguity) 'position' ':' position=SIZE_POS
	 *     color=Color (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     color=Color (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     color=Color (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     color=Color (ambiguity) 'size' ':' size=INT
	 *     color=Color (ambiguity) 'title' ':' title=STRING
	 *     color=Color (ambiguity) 'type' ':' type=PieType
	 *     color=Color (ambiguity) END (rule end)
	 *     colors=COLOR_CHARTS (ambiguity) 'bgcolor' ':' color=Color
	 *     colors=COLOR_CHARTS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     colors=COLOR_CHARTS (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     colors=COLOR_CHARTS (ambiguity) 'padding' ':' padding=INT
	 *     colors=COLOR_CHARTS (ambiguity) 'position' ':' position=SIZE_POS
	 *     colors=COLOR_CHARTS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     colors=COLOR_CHARTS (ambiguity) 'size' ':' size=INT
	 *     colors=COLOR_CHARTS (ambiguity) 'title' ':' title=STRING
	 *     colors=COLOR_CHARTS (ambiguity) 'type' ':' type=PieType
	 *     colors=COLOR_CHARTS (ambiguity) END (rule end)
	 *     legendstyle=LegendStyle (ambiguity) 'bgcolor' ':' color=Color
	 *     legendstyle=LegendStyle (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     legendstyle=LegendStyle (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     legendstyle=LegendStyle (ambiguity) 'padding' ':' padding=INT
	 *     legendstyle=LegendStyle (ambiguity) 'position' ':' position=SIZE_POS
	 *     legendstyle=LegendStyle (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     legendstyle=LegendStyle (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     legendstyle=LegendStyle (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     legendstyle=LegendStyle (ambiguity) 'size' ':' size=INT
	 *     legendstyle=LegendStyle (ambiguity) 'title' ':' title=STRING
	 *     legendstyle=LegendStyle (ambiguity) 'type' ':' type=PieType
	 *     legendstyle=LegendStyle (ambiguity) END (rule end)
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'bgcolor' ':' color=Color
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'padding' ':' padding=INT
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'position' ':' position=SIZE_POS
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'size' ':' size=INT
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'title' ':' title=STRING
	 *     name=PIECHARTID ':' BEGIN (ambiguity) 'type' ':' type=PieType
	 *     name=PIECHARTID ':' BEGIN (ambiguity) END (rule end)
	 *     padding=INT (ambiguity) 'bgcolor' ':' color=Color
	 *     padding=INT (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     padding=INT (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     padding=INT (ambiguity) 'padding' ':' padding=INT
	 *     padding=INT (ambiguity) 'position' ':' position=SIZE_POS
	 *     padding=INT (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     padding=INT (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     padding=INT (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     padding=INT (ambiguity) 'size' ':' size=INT
	 *     padding=INT (ambiguity) 'title' ':' title=STRING
	 *     padding=INT (ambiguity) 'type' ':' type=PieType
	 *     padding=INT (ambiguity) END (rule end)
	 *     piedata+=ChartData END (ambiguity) 'bgcolor' ':' color=Color
	 *     piedata+=ChartData END (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     piedata+=ChartData END (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     piedata+=ChartData END (ambiguity) 'padding' ':' padding=INT
	 *     piedata+=ChartData END (ambiguity) 'position' ':' position=SIZE_POS
	 *     piedata+=ChartData END (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     piedata+=ChartData END (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     piedata+=ChartData END (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     piedata+=ChartData END (ambiguity) 'size' ':' size=INT
	 *     piedata+=ChartData END (ambiguity) 'title' ':' title=STRING
	 *     piedata+=ChartData END (ambiguity) 'type' ':' type=PieType
	 *     piedata+=ChartData END (ambiguity) END (rule end)
	 *     position=SIZE_POS (ambiguity) 'bgcolor' ':' color=Color
	 *     position=SIZE_POS (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     position=SIZE_POS (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     position=SIZE_POS (ambiguity) 'padding' ':' padding=INT
	 *     position=SIZE_POS (ambiguity) 'position' ':' position=SIZE_POS
	 *     position=SIZE_POS (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     position=SIZE_POS (ambiguity) 'size' ':' size=INT
	 *     position=SIZE_POS (ambiguity) 'title' ':' title=STRING
	 *     position=SIZE_POS (ambiguity) 'type' ':' type=PieType
	 *     position=SIZE_POS (ambiguity) END (rule end)
	 *     showlegend=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showlegend=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showlegend=ShowOptionsOff (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     showlegend=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showlegend=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showlegend=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showlegend=ShowOptionsOff (ambiguity) 'size' ':' size=INT
	 *     showlegend=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showlegend=ShowOptionsOff (ambiguity) 'type' ':' type=PieType
	 *     showlegend=ShowOptionsOff (ambiguity) END (rule end)
	 *     showpercentage=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showpercentage=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showpercentage=ShowOptionsOff (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     showpercentage=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showpercentage=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showpercentage=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showpercentage=ShowOptionsOff (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     showpercentage=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showpercentage=ShowOptionsOff (ambiguity) 'size' ':' size=INT
	 *     showpercentage=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showpercentage=ShowOptionsOff (ambiguity) 'type' ':' type=PieType
	 *     showpercentage=ShowOptionsOff (ambiguity) END (rule end)
	 *     showtitle=ShowOptionsOff (ambiguity) 'bgcolor' ':' color=Color
	 *     showtitle=ShowOptionsOff (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     showtitle=ShowOptionsOff (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     showtitle=ShowOptionsOff (ambiguity) 'padding' ':' padding=INT
	 *     showtitle=ShowOptionsOff (ambiguity) 'position' ':' position=SIZE_POS
	 *     showtitle=ShowOptionsOff (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     showtitle=ShowOptionsOff (ambiguity) 'size' ':' size=INT
	 *     showtitle=ShowOptionsOff (ambiguity) 'title' ':' title=STRING
	 *     showtitle=ShowOptionsOff (ambiguity) 'type' ':' type=PieType
	 *     showtitle=ShowOptionsOff (ambiguity) END (rule end)
	 *     size=INT (ambiguity) 'bgcolor' ':' color=Color
	 *     size=INT (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     size=INT (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     size=INT (ambiguity) 'padding' ':' padding=INT
	 *     size=INT (ambiguity) 'position' ':' position=SIZE_POS
	 *     size=INT (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     size=INT (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     size=INT (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     size=INT (ambiguity) 'size' ':' size=INT
	 *     size=INT (ambiguity) 'title' ':' title=STRING
	 *     size=INT (ambiguity) 'type' ':' type=PieType
	 *     size=INT (ambiguity) END (rule end)
	 *     title=STRING (ambiguity) 'bgcolor' ':' color=Color
	 *     title=STRING (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     title=STRING (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     title=STRING (ambiguity) 'padding' ':' padding=INT
	 *     title=STRING (ambiguity) 'position' ':' position=SIZE_POS
	 *     title=STRING (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     title=STRING (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     title=STRING (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     title=STRING (ambiguity) 'size' ':' size=INT
	 *     title=STRING (ambiguity) 'title' ':' title=STRING
	 *     title=STRING (ambiguity) 'type' ':' type=PieType
	 *     title=STRING (ambiguity) END (rule end)
	 *     type=PieType (ambiguity) 'bgcolor' ':' color=Color
	 *     type=PieType (ambiguity) 'colors' ':' colors=COLOR_CHARTS
	 *     type=PieType (ambiguity) 'legendstyle' ':' legendstyle=LegendStyle
	 *     type=PieType (ambiguity) 'padding' ':' padding=INT
	 *     type=PieType (ambiguity) 'position' ':' position=SIZE_POS
	 *     type=PieType (ambiguity) 'showlegend' ':' showlegend=ShowOptionsOff
	 *     type=PieType (ambiguity) 'showpercentage' ':' showpercentage=ShowOptionsOff
	 *     type=PieType (ambiguity) 'showtitle' ':' showtitle=ShowOptionsOff
	 *     type=PieType (ambiguity) 'size' ':' size=INT
	 *     type=PieType (ambiguity) 'title' ':' title=STRING
	 *     type=PieType (ambiguity) 'type' ':' type=PieType
	 *     type=PieType (ambiguity) END (rule end)
	 */
	protected void emit_Piechart___DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3_ENDTerminalRuleCall_3_2_5__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (END 'data' ':' BEGIN ChartData)*
	 *
	 * This ambiguous syntax occurs at:
	 *     color=Color 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     colors=COLOR_CHARTS 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     legendstyle=LegendStyle 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     name=PIECHARTID ':' BEGIN 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     padding=INT 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     piedata+=ChartData (ambiguity) piedata+=ChartData
	 *     position=SIZE_POS 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     showlegend=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     showpercentage=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     showtitle=ShowOptionsOff 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     size=INT 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     title=STRING 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 *     type=PieType 'data' ':' BEGIN ChartData (ambiguity) piedata+=ChartData
	 */
	protected void emit_Piechart___ENDTerminalRuleCall_3_2_5_DataKeyword_3_2_0_ColonKeyword_3_2_1_BEGINTerminalRuleCall_3_2_2_ChartDataParserRuleCall_3_2_3__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'off' | (BEGIN END)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Title_OffKeyword_0_1_or___BEGINTerminalRuleCall_1_0_0_ENDTerminalRuleCall_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
