/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.iDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.iDSL.Color;
import org.xtext.example.mydsl.iDSL.Head;
import org.xtext.example.mydsl.iDSL.IDSLPackage;
import org.xtext.example.mydsl.iDSL.Logo;
import org.xtext.example.mydsl.iDSL.Title;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Head</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getBgcolor <em>Bgcolor</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getBgpattern <em>Bgpattern</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getBgimage <em>Bgimage</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getSize <em>Size</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getPosition <em>Position</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getLogo <em>Logo</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.iDSL.impl.HeadImpl#getSubtitle <em>Subtitle</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HeadImpl extends MinimalEObjectImpl.Container implements Head
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getBgcolor() <em>Bgcolor</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBgcolor()
   * @generated
   * @ordered
   */
  protected Color bgcolor;

  /**
   * The default value of the '{@link #getBgpattern() <em>Bgpattern</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBgpattern()
   * @generated
   * @ordered
   */
  protected static final String BGPATTERN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBgpattern() <em>Bgpattern</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBgpattern()
   * @generated
   * @ordered
   */
  protected String bgpattern = BGPATTERN_EDEFAULT;

  /**
   * The default value of the '{@link #getBgimage() <em>Bgimage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBgimage()
   * @generated
   * @ordered
   */
  protected static final String BGIMAGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBgimage() <em>Bgimage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBgimage()
   * @generated
   * @ordered
   */
  protected String bgimage = BGIMAGE_EDEFAULT;

  /**
   * The default value of the '{@link #getSize() <em>Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSize()
   * @generated
   * @ordered
   */
  protected static final String SIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSize() <em>Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSize()
   * @generated
   * @ordered
   */
  protected String size = SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getPosition() <em>Position</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPosition()
   * @generated
   * @ordered
   */
  protected static final String POSITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPosition() <em>Position</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPosition()
   * @generated
   * @ordered
   */
  protected String position = POSITION_EDEFAULT;

  /**
   * The cached value of the '{@link #getLogo() <em>Logo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLogo()
   * @generated
   * @ordered
   */
  protected Logo logo;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected Title title;

  /**
   * The cached value of the '{@link #getSubtitle() <em>Subtitle</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubtitle()
   * @generated
   * @ordered
   */
  protected Title subtitle;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HeadImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IDSLPackage.Literals.HEAD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Color getBgcolor()
  {
    return bgcolor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBgcolor(Color newBgcolor, NotificationChain msgs)
  {
    Color oldBgcolor = bgcolor;
    bgcolor = newBgcolor;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__BGCOLOR, oldBgcolor, newBgcolor);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBgcolor(Color newBgcolor)
  {
    if (newBgcolor != bgcolor)
    {
      NotificationChain msgs = null;
      if (bgcolor != null)
        msgs = ((InternalEObject)bgcolor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__BGCOLOR, null, msgs);
      if (newBgcolor != null)
        msgs = ((InternalEObject)newBgcolor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__BGCOLOR, null, msgs);
      msgs = basicSetBgcolor(newBgcolor, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__BGCOLOR, newBgcolor, newBgcolor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBgpattern()
  {
    return bgpattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBgpattern(String newBgpattern)
  {
    String oldBgpattern = bgpattern;
    bgpattern = newBgpattern;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__BGPATTERN, oldBgpattern, bgpattern));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBgimage()
  {
    return bgimage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBgimage(String newBgimage)
  {
    String oldBgimage = bgimage;
    bgimage = newBgimage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__BGIMAGE, oldBgimage, bgimage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSize()
  {
    return size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSize(String newSize)
  {
    String oldSize = size;
    size = newSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__SIZE, oldSize, size));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPosition()
  {
    return position;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPosition(String newPosition)
  {
    String oldPosition = position;
    position = newPosition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__POSITION, oldPosition, position));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Logo getLogo()
  {
    return logo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLogo(Logo newLogo, NotificationChain msgs)
  {
    Logo oldLogo = logo;
    logo = newLogo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__LOGO, oldLogo, newLogo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLogo(Logo newLogo)
  {
    if (newLogo != logo)
    {
      NotificationChain msgs = null;
      if (logo != null)
        msgs = ((InternalEObject)logo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__LOGO, null, msgs);
      if (newLogo != null)
        msgs = ((InternalEObject)newLogo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__LOGO, null, msgs);
      msgs = basicSetLogo(newLogo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__LOGO, newLogo, newLogo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Title getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTitle(Title newTitle, NotificationChain msgs)
  {
    Title oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__TITLE, oldTitle, newTitle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitle(Title newTitle)
  {
    if (newTitle != title)
    {
      NotificationChain msgs = null;
      if (title != null)
        msgs = ((InternalEObject)title).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__TITLE, null, msgs);
      if (newTitle != null)
        msgs = ((InternalEObject)newTitle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__TITLE, null, msgs);
      msgs = basicSetTitle(newTitle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__TITLE, newTitle, newTitle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Title getSubtitle()
  {
    return subtitle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubtitle(Title newSubtitle, NotificationChain msgs)
  {
    Title oldSubtitle = subtitle;
    subtitle = newSubtitle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__SUBTITLE, oldSubtitle, newSubtitle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSubtitle(Title newSubtitle)
  {
    if (newSubtitle != subtitle)
    {
      NotificationChain msgs = null;
      if (subtitle != null)
        msgs = ((InternalEObject)subtitle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__SUBTITLE, null, msgs);
      if (newSubtitle != null)
        msgs = ((InternalEObject)newSubtitle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IDSLPackage.HEAD__SUBTITLE, null, msgs);
      msgs = basicSetSubtitle(newSubtitle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IDSLPackage.HEAD__SUBTITLE, newSubtitle, newSubtitle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IDSLPackage.HEAD__BGCOLOR:
        return basicSetBgcolor(null, msgs);
      case IDSLPackage.HEAD__LOGO:
        return basicSetLogo(null, msgs);
      case IDSLPackage.HEAD__TITLE:
        return basicSetTitle(null, msgs);
      case IDSLPackage.HEAD__SUBTITLE:
        return basicSetSubtitle(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IDSLPackage.HEAD__NAME:
        return getName();
      case IDSLPackage.HEAD__BGCOLOR:
        return getBgcolor();
      case IDSLPackage.HEAD__BGPATTERN:
        return getBgpattern();
      case IDSLPackage.HEAD__BGIMAGE:
        return getBgimage();
      case IDSLPackage.HEAD__SIZE:
        return getSize();
      case IDSLPackage.HEAD__POSITION:
        return getPosition();
      case IDSLPackage.HEAD__LOGO:
        return getLogo();
      case IDSLPackage.HEAD__TITLE:
        return getTitle();
      case IDSLPackage.HEAD__SUBTITLE:
        return getSubtitle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IDSLPackage.HEAD__NAME:
        setName((String)newValue);
        return;
      case IDSLPackage.HEAD__BGCOLOR:
        setBgcolor((Color)newValue);
        return;
      case IDSLPackage.HEAD__BGPATTERN:
        setBgpattern((String)newValue);
        return;
      case IDSLPackage.HEAD__BGIMAGE:
        setBgimage((String)newValue);
        return;
      case IDSLPackage.HEAD__SIZE:
        setSize((String)newValue);
        return;
      case IDSLPackage.HEAD__POSITION:
        setPosition((String)newValue);
        return;
      case IDSLPackage.HEAD__LOGO:
        setLogo((Logo)newValue);
        return;
      case IDSLPackage.HEAD__TITLE:
        setTitle((Title)newValue);
        return;
      case IDSLPackage.HEAD__SUBTITLE:
        setSubtitle((Title)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IDSLPackage.HEAD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case IDSLPackage.HEAD__BGCOLOR:
        setBgcolor((Color)null);
        return;
      case IDSLPackage.HEAD__BGPATTERN:
        setBgpattern(BGPATTERN_EDEFAULT);
        return;
      case IDSLPackage.HEAD__BGIMAGE:
        setBgimage(BGIMAGE_EDEFAULT);
        return;
      case IDSLPackage.HEAD__SIZE:
        setSize(SIZE_EDEFAULT);
        return;
      case IDSLPackage.HEAD__POSITION:
        setPosition(POSITION_EDEFAULT);
        return;
      case IDSLPackage.HEAD__LOGO:
        setLogo((Logo)null);
        return;
      case IDSLPackage.HEAD__TITLE:
        setTitle((Title)null);
        return;
      case IDSLPackage.HEAD__SUBTITLE:
        setSubtitle((Title)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IDSLPackage.HEAD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case IDSLPackage.HEAD__BGCOLOR:
        return bgcolor != null;
      case IDSLPackage.HEAD__BGPATTERN:
        return BGPATTERN_EDEFAULT == null ? bgpattern != null : !BGPATTERN_EDEFAULT.equals(bgpattern);
      case IDSLPackage.HEAD__BGIMAGE:
        return BGIMAGE_EDEFAULT == null ? bgimage != null : !BGIMAGE_EDEFAULT.equals(bgimage);
      case IDSLPackage.HEAD__SIZE:
        return SIZE_EDEFAULT == null ? size != null : !SIZE_EDEFAULT.equals(size);
      case IDSLPackage.HEAD__POSITION:
        return POSITION_EDEFAULT == null ? position != null : !POSITION_EDEFAULT.equals(position);
      case IDSLPackage.HEAD__LOGO:
        return logo != null;
      case IDSLPackage.HEAD__TITLE:
        return title != null;
      case IDSLPackage.HEAD__SUBTITLE:
        return subtitle != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", bgpattern: ");
    result.append(bgpattern);
    result.append(", bgimage: ");
    result.append(bgimage);
    result.append(", size: ");
    result.append(size);
    result.append(", position: ");
    result.append(position);
    result.append(')');
    return result.toString();
  }

} //HeadImpl
